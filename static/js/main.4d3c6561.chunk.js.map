{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["Loader","className","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todo","id","title","completed","userId","modalClose","useState","loading","setLoading","user","setUser","userName","name","useEffect","getUser","finally","type","onClick","href","TodoItem","openTodoModal","setOpenTodoModal","classNames","TodoList","todos","map","TodoFilter","setTodos","value","setValue","searchValue","setSearchValue","filteredTodos","filter","toLowerCase","includes","onChange","event","target","placeholder","e","style","pointerEvents","App","todoList","setTodoList","filteresTodos","setFiletedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d3c6561.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo,\n  modalClose: React.Dispatch<React.SetStateAction<boolean>>\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo: {\n    id,\n    title,\n    completed,\n    userId,\n  },\n  modalClose,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState<User>();\n\n  const userName = user?.name;\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(userId).then(setUser)\n      .finally(() => setLoading(false));\n  }, [userId]);\n\n  const closeModal = () => {\n    setLoading(false);\n    modalClose(false);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {userName}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoModal } from '../TodoModal';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const [openTodoModal, setOpenTodoModal] = useState(false);\n\n  return (\n    <>\n      <tr\n        data-cy=\"todo\"\n        className={classNames(\n          { 'has-background-info-light': openTodoModal },\n        )}\n      >\n        <td className=\"is-vcentered\">{todo.id}</td>\n\n        <td className=\"is-vcentered\">\n          {todo.completed\n            && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n        </td>\n\n        <td className=\"is-vcentered is-expanded\">\n          <p className={classNames({\n            'has-text-danger': !todo.completed,\n            'has-text-success': todo.completed,\n          })}\n          >\n            {todo.title}\n          </p>\n        </td>\n\n        <td className=\"has-text-right is-vcentered\">\n          <button\n            data-cy=\"selectButton\"\n            className=\"button\"\n            type=\"button\"\n            onClick={() => setOpenTodoModal(true)}\n          >\n            <span className=\"icon\">\n              <i className={\n                classNames('far',\n                  { 'fa-eye': !openTodoModal },\n                  { 'fa-eye-slash': openTodoModal })\n              }\n              />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      {openTodoModal\n        && <TodoModal todo={todo} modalClose={setOpenTodoModal} />}\n    </>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        return (\n          <TodoItem todo={todo} key={todo.id} />\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>,\n  todos: Todo[],\n};\n\nexport const TodoFilter: React.FC<Props> = ({ setTodos, todos }) => {\n  const [value, setValue] = useState('all');\n  const [searchValue, setSearchValue] = useState('');\n\n  useEffect(() => {\n    let filteredTodos = todos;\n\n    filteredTodos = todos.filter(todo => {\n      return todo.title.toLowerCase().includes(searchValue.toLowerCase());\n    });\n\n    switch (value) {\n      case 'active':\n        filteredTodos = todos.filter(todo => {\n          if (searchValue) {\n            return !todo.completed\n              && todo.title.toLowerCase().includes(searchValue.toLowerCase());\n          }\n\n          return !todo.completed;\n        });\n        break;\n\n      case 'completed':\n        filteredTodos = todos.filter(todo => {\n          if (searchValue) {\n            return todo.completed\n              && todo.title.toLowerCase().includes(searchValue.toLowerCase());\n          }\n\n          return todo.completed;\n        });\n        break;\n\n      default:\n        filteredTodos = todos.filter(todo => {\n          if (searchValue) {\n            return todo.title.includes(searchValue);\n          }\n\n          return todo;\n        });\n        break;\n    }\n\n    setTodos(filteredTodos);\n  }, [value, searchValue, setTodos, todos]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={event => setValue(event.target.value)}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchValue}\n          onChange={e => setSearchValue(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchValue\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setSearchValue('')}\n              />\n            </span>\n          )}\n\n      </p>\n    </form>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todoList, setTodoList] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [filteresTodos, setFiletedTodos] = useState<Todo[]>(todoList);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodoList)\n      .finally(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    setFiletedTodos(todoList);\n  }, [todoList]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter setTodos={setFiletedTodos} todos={todoList} />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? <Loader />\n                : <TodoList todos={filteresTodos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}